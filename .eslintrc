{
    "extends": ["standard", "plugin:no-unsanitized/DOM", "plugin:@typescript-eslint/recommended"],
    "root": true,
    "parserOptions": {
      "ecmaVersion": "latest",
      "project": "./tsconfig.json"
    },
    "parser": "@typescript-eslint/parser",
    "plugins": ["promise","@typescript-eslint"],
    "globals": {
        "$USER_PREFERENCES$": "readonly",
        "$USER_UNPROTECTED_DOMAINS$": "readonly",
        "$CONTENT_SCOPE$": "readonly",
        "$BUNDLED_CONFIG$": "readonly",
        "windowsInteropPostMessage": "readonly",
        "windowsInteropAddEventListener": "readonly",
        "windowsInteropRemoveEventListener": "readonly"
    },
    "rules": {
        "indent": ["error", 4],
        "require-await": ["error"],
        "promise/prefer-await-to-then": ["error"],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "no-unsanitized/property": [
            "error",
            {
                "disableDefault": true,
                "escape": {
                    "taggedTemplates": ["html"]
                }
            },
            {

                // Check unsafe assignment to innerHTML
                "innerHTML": {},

                // Check unsafe assignment to outerHTML
                "outerHTML": {},
            }
        ],
        "no-unsanitized/method": [
            "error",
            {
                "escape": {
                    "taggedTemplates": ["html"]
                }
            },
            {

                // check second parameter to .insertAdjacentHTML()
                "insertAdjacentHTML": {
                    "properties": [1]
                },

                // check first parameter to .write(), as long as the preceeding object matches the regex "document"
                "write": {
                    "objectMatches": [
                        "document"
                    ],
                    "properties": [0]
                },

                // check first parameter to .writeLn(), as long as the preceeding object matches the regex "document"
                "writeln": {
                    "objectMatches": [
                        "document"
                    ],
                    "properties": [0]
                }
            }
        ]
    },
    "env": {
        "webextensions": true,
        "browser": true,
        "jasmine": true
    }
}
